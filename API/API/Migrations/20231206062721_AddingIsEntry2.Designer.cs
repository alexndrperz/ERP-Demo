// <auto-generated />
using System;
using API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DbSqliteContext))]
    [Migration("20231206062721_AddingIsEntry2")]
    partial class AddingIsEntry2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("API.Entities.Invoices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("created_At")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isEntry")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("provider_id")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("provider_id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("API.Entities.ProductsDefault", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("imgPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("percentage_sell")
                        .HasColumnType("TEXT");

                    b.Property<int>("quantity_available")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ProductsDefaults");
                });

            modelBuilder.Entity("API.Entities.Providers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("rnc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("API.Entities.SubInvoices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("invoice_id")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("price_unit")
                        .HasColumnType("TEXT");

                    b.Property<int>("product_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("invoice_id");

                    b.HasIndex("product_id");

                    b.ToTable("SubInvoices");
                });

            modelBuilder.Entity("API.Entities.Invoices", b =>
                {
                    b.HasOne("API.Entities.Providers", "provider")
                        .WithMany()
                        .HasForeignKey("provider_id");

                    b.Navigation("provider");
                });

            modelBuilder.Entity("API.Entities.SubInvoices", b =>
                {
                    b.HasOne("API.Entities.Invoices", "invoice")
                        .WithMany("subInvoices")
                        .HasForeignKey("invoice_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.ProductsDefault", "product")
                        .WithMany("subInvoices")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("invoice");

                    b.Navigation("product");
                });

            modelBuilder.Entity("API.Entities.Invoices", b =>
                {
                    b.Navigation("subInvoices");
                });

            modelBuilder.Entity("API.Entities.ProductsDefault", b =>
                {
                    b.Navigation("subInvoices");
                });
#pragma warning restore 612, 618
        }
    }
}
